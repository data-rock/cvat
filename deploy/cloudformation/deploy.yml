AWSTemplateFormatVersion: 2010-09-09
Transform: 'AWS::Serverless-2016-10-31'
Description: 'Cvat test stack'

Parameters:
  ServiceName:
    Type: String
    Description: A name for the service
    Default: Cvat
  DbName:
    Type: String
    Default: cvat
    Description: The name of the postgres database resource
  DbUser:
    Description: The username of the database
    Type: String
    NoEcho: true
    Default: root
  DbPassword:
    Description: The password of the database
    Type: AWS::SSM::Parameter::Value<String>
    Default: /datarock/cvat/dbpassword
    NoEcho: true
  SSLCertificateArn:
    Description: SSL certificate arn
    Type: String
  CvatECRRepositoryName:
    Description: Cvat app repo name
    Type: String
    Default: datarock/cvat
  CvatUIECRRepositoryName:
    Description: Cvat UI ECR repo name
    Type: String
    Default: datarock/cvat_ui
  CvatImageTag:
    Description: Cvat ECR image tag
    Type: String
    Default: latest
  CostGroupTag:
    Description: Cost group tag
    Type: String
    Default: ECS test
  SSHKeyPairName:
    Description: SSH keypair name
    Type: String
    Default: ecs-keypair
  DomainName:
    Description: domain name
    Type: String
    Default: datarock.com.au
  HostName:
    Description: host name
    Type: String
    Default: label
  ECSDesiredCapacity:
    Description: desired ECS instance capacity
    Type: Number
    Default: 1
  ECSMaxCapacity:
    Description: desired ECS instance capacity
    Type: Number
    Default: 4
  ECSSpotPrice:
    Description: Spot price to bid
    Type: Number
    Default: 0.0584
  APIServiceDesiredCount:
    Description: desired ECS instance capacity
    Type: Number
    Default: 1
  UIServiceDesiredCount:
    Description: desired ECS instance capacity
    Type: Number
    Default: 1
  ServiceMaxCount:
    Description: desired ECS instance capacity
    Type: Number
    Default: 4
  HostedZoneName:
    Description: hosted zone
    Type: String
  HostUrl:
    Description: hosted url
    Type: String
  CreateCvatApiService:
    Type: String
    AllowedValues:
      - 'true'
      - 'false'
    Default: 'true'
    Description: if true deploy CvatApi service
  CreateCvatUIService:
    Type: String
    AllowedValues:
      - 'true'
      - 'false'
    Default: 'true'
    Description: if true deploy CvatApi service
  VpcId:
    Type: String
    Default: vpc-02311d65
  PrivateSubnetOne:
    Type: String
    Default: subnet-290e1a4e
  PrivateSubnetTwo:
    Type: String
    Default: subnet-d877f080
  PublicSubnetOne:
    Type: String
    Default: subnet-09726019e5ffaffc7
  PublicSubnetTwo:
    Type: String
    Default: subnet-04a66456615238488
  BastionSecurityGroup:
    Type: String
    Default: sg-0b0845c59ba4dd862
  DBSnapshotIdentifier:
    Type: String
    Default: ''

Conditions:
  EnableTaskCvatApi: !Equals [!Ref CreateCvatApiService, 'true']
  EnableTaskCvatUI: !Equals [!Ref CreateCvatUIService, 'true']

Resources:
  CfnEcsStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: ./nested/cfn-ecs.yml
      Parameters:
        KeyPairName: !Ref SSHKeyPairName
        ServiceName: !Ref ServiceName
        DesiredCapacity: !Ref ECSDesiredCapacity
        MaxSize: !Ref ECSMaxCapacity
        InstanceType: t2.medium
        SpotPrice: !Ref ECSSpotPrice
        EFSNameTag: CvatEFSVolume
        SSLCertificateArn:  !Ref SSLCertificateArn
        HostName: !Ref HostName
        HostedZoneName: !Ref HostedZoneName
        VpcId: !Ref VpcId
        PrivateSubnetOne: !Ref PrivateSubnetOne
        PrivateSubnetTwo: !Ref PrivateSubnetTwo
        PublicSubnetOne: !Ref PublicSubnetOne
        PublicSubnetTwo: !Ref PublicSubnetTwo
        BastionSecurityGroup: !Ref BastionSecurityGroup
      Tags:
        - Key: CostGroup
          Value: !Ref CostGroupTag

  CfnEcrStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: ./nested/cfn-ecr.yml
      Parameters:
        CvatECRRepositoryName: !Ref CvatECRRepositoryName
        CvatUIECRRepositoryName: !Ref CvatUIECRRepositoryName
      Tags:
        - Key: CostGroup
          Value: !Ref CostGroupTag

  # CfnRedisStack:
  #   Type: AWS::CloudFormation::Stack
  #   Properties:
  #     TemplateURL: ./nested/cfn-redis.yml
  #     Parameters:
  #       VpcId: !Ref VpcId
  #       PrivateSubnetOne: !Ref PrivateSubnetOne
  #       PrivateSubnetTwo: !Ref PrivateSubnetTwo
  #       ClusterName: Cvat-redis
  #       ContainerSecurityGroup:
  #         !GetAtt [CfnEcsStack, Outputs.ContainerSecurityGroup]
  #       CacheNodeType: cache.t2.micro
  #     Tags:
  #       - Key: CostGroup
  #         Value: !Ref CostGroupTag

  # CfnCloudWatchStack:
  #   Type: AWS::CloudFormation::Stack
  #   Properties:
  #     TemplateURL: ./nested/cfn-cloudwatch.yml
  #     Parameters:
  #       ClusterName: !GetAtt [CfnEcsStack, Outputs.ClusterName]
  #       ECSAutoScalingGroup: !GetAtt [CfnEcsStack, Outputs.ECSAutoScalingGroup]

  # CfnECSLifeCycleHookStack:
  #   Type: AWS::CloudFormation::Stack
  #   Properties:
  #     TemplateURL: ./nested/cfn-ecs-lifecyclehook.yml
  #     Parameters:
  #       ClusterName: !GetAtt [CfnEcsStack, Outputs.ClusterName]
  #       ECSAutoScalingGroup: !GetAtt [CfnEcsStack, Outputs.ECSAutoScalingGroup]

  CfnRdsStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: ./nested/cfn-rds.yml
      Parameters:
        DbName: !Ref DbName
        DbMasterUser: !Ref DbUser
        DbMasterPassword: !Ref 'DbPassword'
        DbInstanceClass: db.t3.micro
        VpcId: !Ref VpcId
        PrivateSubnetOne: !Ref PrivateSubnetOne
        PrivateSubnetTwo: !Ref PrivateSubnetTwo
        ContainerSecurityGroup:
          !GetAtt [CfnEcsStack, Outputs.ContainerSecurityGroup]
        DBSnapshotIdentifier: !Ref DBSnapshotIdentifier
      Tags:
        - Key: CostGroup
          Value: !Ref CostGroupTag

  # CfnCvatApiStack:
  #   Condition: EnableTaskCvatApi
  #   Type: AWS::CloudFormation::Stack
  #   Properties:
  #     TemplateURL: ./nested/cfn-cvat-api.yml
  #     Parameters:
  #       ClusterName: !GetAtt [CfnEcsStack, Outputs.ClusterName]
  #       ServiceName: Cvat-app
  #       PublicListener: !GetAtt [CfnEcsStack, Outputs.PublicAPILoadBalancerListener]
  #       HostUrl: !Ref HostUrl
  #       VpcId: !Ref VpcId
  #       DbHost: !GetAtt [CfnRdsStack, Outputs.DbEndpoint]
  #       DbName: !Ref DbName
  #       DbUser: !Ref DbUser
  #       DbPassword: !Ref 'DbPassword'
  #       RedisHost: !GetAtt [CfnRedisStack, Outputs.ElastiCacheAddress]
  #       Priority: 1
  #       DesiredCount: !Ref APIServiceDesiredCount
  #       MaxCount: !Ref ServiceMaxCount
  #       ImageUrl: !Join [ ':', [ !GetAtt [CfnEcrStack, Outputs.CvatECRRepository], !Ref 'CvatImageTag' ] ]
  #       ContainerCpu: 1792
  #       ContainerMemory: 3328
  #       AllowedHosts: '*'

  # CfnCvatUIStack:
  #   Condition: EnableTaskCvatUI
  #   Type: AWS::CloudFormation::Stack
  #   Properties:
  #     TemplateURL: ./nested/cfn-cvat-ui.yml
  #     Parameters:
  #       ClusterName: !GetAtt [CfnEcsStack, Outputs.ClusterName]
  #       ServiceName: Cvat-ui
  #       PublicListener: !GetAtt [CfnEcsStack, Outputs.PublicLoadBalancerListener]
  #       HostUrl: !Ref HostUrl
  #       VpcId: !Ref VpcId
  #       Priority: 2
  #       DesiredCount: !Ref UIServiceDesiredCount
  #       MaxCount: !Ref ServiceMaxCount
  #       ImageUrl: !Join [ ':', [ !GetAtt [CfnEcrStack, Outputs.CvatUIECRRepository], !Ref 'CvatImageTag' ] ]
  #       ContainerCpu: 256
  #       ContainerMemory: 512
