# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2.1

orbs:
  aws-cli: circleci/aws-cli@0.1.13
  jq: circleci/jq@1.9.0

executors:
  python:
    docker:
      - image: circleci/python:3.6.1

general:
  branches:
    only:
     - deploy

jobs:
  deploy_test:
    executor: python

    working_directory: ~/repo

    steps:
      - checkout

      - run:
          name: Setup test Environment Variables
          command: |
            echo export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID_TEST_ENV >> $BASH_ENV
            echo export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY_TEST_ENV >> $BASH_ENV
            echo export AWS_DEFAULT_REGION="ap-southeast-2" >> $BASH_ENV
      - aws-cli/install
      - jq/install
      - aws-cli/configure

      - setup_remote_docker:
          docker_layer_caching: true

      - run:
          name: Deploy
          command: |
            ./deploy/bin/deploy.sh
          no_output_timeout: 45m

  deploy_prod:
    executor: python

    working_directory: ~/repo

    steps:
      - checkout

      - run:
          name: Setup production Environment Variables
          command: |
            echo export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID_PROD_ENV >> $BASH_ENV
            echo export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY_PROD_ENV >> $BASH_ENV
            echo export AWS_DEFAULT_REGION="ap-southeast-2" >> $BASH_ENV
            echo export DEPLOY_PRODUCTION="true" >> $BASH_ENV
      - aws-cli/install
      - jq/install
      - aws-cli/configure

      - setup_remote_docker:
          docker_layer_caching: true

      - run:
          name: Deploy
          command: |
            ./deploy/bin/deploy.sh
          no_output_timeout: 45m

workflows:
  version: 2
  deploy_test:
    jobs:
      - deploy-test-approval:
          type: approval
          filters:
            branches:
              only: deploy
      - deploy_test:
          requires:
            - deploy-test-approval
          filters:
            branches:
              only: deploy

  deploy_prod:
    jobs:
      - deploy-prod-approval:
          type: approval
          filters:
            branches:
              only: deploy
      - deploy_prod:
          requires:
            - deploy-prod-approval
          filters:
            branches:
              only: deploy